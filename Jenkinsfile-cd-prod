node {
    try {
        notify ('Job Started')

       stage('Git-Checkout') {
       git 'https://github.com/Vikas-tm/samplejavacode-prod-provisioning.git'
       }
        
       stage('Downloading artifact for Production')
	{
		def server = Artifactory.server 'vik-artifactory'
		def downloadSpec="""{
			"files":[
					{
					"pattern":"M1036759/addressbook.war",
					"target":"/var/lib/jenkins/workspace/addressbook-pipeline-cd-prod/"
					}
					]
							}"""
				server.download(downloadSpec)
	}
       stage('Getting ready for Ansible') {
       sh label: 'Docker', script: 'cp -rf addressbook.war wars/'
       sh label: '', script: 'cp /var/lib/jenkins/workspace/addressbook-pipeline-infra/jenkins-ci.ini .'
       sh label: '', script: '#!/bin/bash "ansible-playbook -u ec2-user --key ${var.pvt_key} web-playbook.yaml -vvv"'
       }


notify('Job Completed')
} catch (err) {
  notify("Error ${err}")
  currentBuild.result = 'FAILURE'
}
}

def notify(status){
    emailext (
        to: "vikaz.tm@gmail.com",
        subject: "${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
         body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
        <p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
                )
        }
